tn.clust.2.otus
wa.clust.1.otus
wa.clust.2.otus
hm.melt%>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile()+scale_fill_gradient(low="white", high="black") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))
axislabels <- with(hm, paste(rownames(.), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)))
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)))
names(axislabels) <- rownames(hm)
i <- grep("(uncultured$)|([01234567890-]+$)|(group$)", axislabels, perl=T)#
axislabels[i]<-paste(names(axislabels)[i], hm$Family[i])#
j <- grep("(uncultured$)|([01234567890-]+$)|(group$)|([01234567890-]+_fa$)", axislabels, perl=T)#
axislabels[j]<-paste(names(axislabels)[j], hm$Order[j])#
k <- grep("(uncultured_fa$)|([01234567890-]+_or$)", axislabels, perl=T)#
axislabels[k]<-paste(names(axislabels)[k], hm$Phylum[k])#
l <- grep("[01234567890-]+$", axislabels, perl=T)#
axislabels[l]<-paste(names(axislabels)[l], hm$Class[l])
axislabels
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile()+scale_fill_gradient(low="white", high="black") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt <-hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1) %>% decostand(method="log") %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt()
hm.melt$variable <- factor(hm.melt$variable, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
#
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
?scale_fill_gradient
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile() + scale_alpha(, range=c0,1) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile() + scale_alpha(, range=c(0,1) )+ theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile() + scale_alpha(, range=c(1,0) )+ theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile() + scale_alpha(, range=c(1,0), trans=reverse)+ theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile() + scale_alpha(, range=c(1,0), trans='reverse')+ theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=value)) + geom_tile() + scale_alpha(trans="reverse")+ theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=variable, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt <-hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1) %>% decostand(method="log") %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt()
head(hm.melt)
data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))
hm.melt <-hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1) %>% decostand(method="log") %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt()
data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))
head(hm.melt)
hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1) %>% decostand(method="log") %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus)))))
hm.melt <-hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1) %>% decostand(method="log") %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt()
?melt
hm.melt <-hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1) %>% decostand(method="log") %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
head(hm.melt)
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)))#
names(axislabels) <- rownames(hm)#
#
i <- grep("(uncultured$)|([01234567890-]+$)|(group$)", axislabels, perl=T)#
axislabels[i]<-paste(names(axislabels)[i], hm$Family[i])#
j <- grep("(uncultured$)|([01234567890-]+$)|(group$)|([01234567890-]+_fa$)", axislabels, perl=T)#
axislabels[j]<-paste(names(axislabels)[j], hm$Order[j])#
k <- grep("(uncultured_fa$)|([01234567890-]+_or$)", axislabels, perl=T)#
axislabels[k]<-paste(names(axislabels)[k], hm$Phylum[k])#
l <- grep("[01234567890-]+$", axislabels, perl=T)#
axislabels[l]<-paste(names(axislabels)[l], hm$Class[l])
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=value)) + geom_tile() + scale_fill_gradient(low="white", high="black") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
?scale_fill_discrete
?Scale_fill_manual
?scale_fill_manual
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_manual(values=c("red",'orange','blue','purlple')) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels, color=Cluster)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_manual(values=c("red",'orange','blue','purlple')) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_discrete(values=c("red",'orange','blue','purlple')) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
?scale_fill_discrete
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_discrete(palette=rainbow(4)) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
rainbow(4)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_discrete(rainbow(4)) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_manual(rainbow(4)) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
?scale_fill
scale_fill_brewer
?scale_fill_brewer
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_brewer() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(trans="reverse") + scale_fill_distiller() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
?scale_alpha_continuous
?decostand
hm[,-c(1:7)] %>% decostand(.,method="max", MARGIN=1)
hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1)
(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))*-1+1
hm.melt <-1-(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1)) %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt <(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))*-1+1 %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt <- (hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))*-1+1 %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt <- (1-(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))) %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
#
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_distiller() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt <- (1-(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))) %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
#
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
head (hm.melt)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_distiller() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))
?scale_alpha
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(ranve=c(0,1)) +scale_fill_distiller() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) +scale_fill_distiller() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt <- hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1) %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
#
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) +scale_fill_distiller() + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=value)) + geom_tile() + scale_fill_gradient(low="white", high="black") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
?scale_fill_distiller()
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) +scale_fill_distiller(palette=rainbow(4)) + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1))  + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels, palette=rainbow(4))
?scale_y_discrete
?discrete_scale
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1))  + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
?Scale_fill
?scale_fill
?scale_fill_brewer
hm.melt <- hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1) %>% cbind(data.frame(OTU=rownames(hm), Cluster = as.factor(c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus)))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
#
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1))  + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)
panel.background = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1))  + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)  theme_bw() +
theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0),axis.line = element_line(colour = "black"),
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0),axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + theme_bw() +
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0),axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank())
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)%>% gsub("(\([A-Za-z1234567890 ]\))+"," ",.,perl=T)))
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)%>% gsub("(\\([A-Za-z1234567890 ]\\))+"," ",.,perl=T)))
axislabels
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)%>% gsub("\\([A-Za-z0-9 _]*\\)"," ",.,perl=T)))
axislabels
i <- grep("(uncultured$)|([01234567890-]+$)|(group$)", axislabels, perl=T)#
axislabels[i]<-paste(names(axislabels)[i], hm$Family[i])#
j <- grep("(uncultured$)|([01234567890-]+$)|(group$)|([01234567890-]+_fa$)", axislabels, perl=T)#
axislabels[j]<-paste(names(axislabels)[j], hm$Order[j])#
k <- grep("(uncultured_fa$)|([01234567890-]+_or$)", axislabels, perl=T)#
axislabels[k]<-paste(names(axislabels)[k], hm$Phylum[k])#
l <- grep("[01234567890-]+$", axislabels, perl=T)#
axislabels[l]<-paste(names(axislabels)[l], hm$Class[l])
hm.melt$SGroup <-1*(hm.melt$Sample %in% indian)+2*(hm.melt$Sample %in% tn.neg)+3*(hm.melt$Sample %in% tn.tcd)+4*(hm.melt$Sample %in% wa.neg)+5*(hm.melt$Sample %in% wa.gm)
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))
hm.melt$SGroup <-1*(hm.melt$Sample %in% indian)+2*(hm.melt$Sample %in% tn.neg)+3*(hm.melt$Sample %in% tn.tcd)+4*(hm.melt$Sample %in% wa.neg)+5*(hm.melt$Sample %in% wa.gm)
hm.melt <- hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1) %>% cbind(data.frame(OTU=rownames(hm), Cluster = as.factor(c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus)))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample") #
#
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
hm.melt$SGroup <-1*(hm.melt$Sample %in% indian)+2*(hm.melt$Sample %in% tn.neg)+3*(hm.melt$Sample %in% tn.tcd)+4*(hm.melt$Sample %in% wa.neg)+5*(hm.melt$Sample %in% wa.gm)
levels(hm.melt$SGroup)
hm.melt <- hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1) %>% cbind(data.frame(OTU=rownames(hm), Cluster = as.factor(c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus)))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample")
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))
hm.melt$Sample
hm.melt$SGroup <-1*(hm.melt$Sample %in% indian) + 2*(hm.melt$Sample %in% tn.neg) + 3*(hm.melt$Sample %in% tn.tcd) + 4*(hm.melt$Sample %in% wa.neg) + 5*(hm.melt$Sample %in% wa.gm)
hm.melt$SGroup <-1*(hm.melt$Sample %in% indian) + 2*(hm.melt$Sample %in% tn.neg) + 3*(hm.melt$Sample %in% tn.tcd) + 4*(hm.melt$Sample %in% wa.neg) + 5*(hm.melt$Sample %in% wa.gm) %>% as.factor()
hm.melt$SGroup <- (1*(hm.melt$Sample %in% indian) + 2*(hm.melt$Sample %in% tn.neg) + 3*(hm.melt$Sample %in% tn.tcd) + 4*(hm.melt$Sample %in% wa.neg) + 5*(hm.melt$Sample %in% wa.gm)) %>% as.factor()
levels(hm.melt$SGroup)
hm.melt$SGroup <- (1*(hm.melt$Sample %in% indian) + 2*(hm.melt$Sample %in% tn.neg) + 3*(hm.melt$Sample %in% tn.tcd[1:9]) + 4*(hm.melt$Sample %in% tn.tcd[10:12]) + 5*(hm.melt$Sample %in% wa.neg) + 6*(hm.melt$Sample %in% wa.gm)) %>% as.factor()
levels(hm.melt$SGroup)
levels(hm.melt$SGroup)<-c("Indiana","TN Polk Co. Clones","TN Polk Co. Bedrun","TN Knox Co. Wild","WA TCD-negative","WA TCD-positive")
levels(hm.melt$SGroup)
stre(hm.melt$SGroup)
str(hm.melt$SGroup)
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)%>% gsub("\\([A-Za-z0-9 _]*\\)"," ",.,perl=T)))#
names(axislabels) <- rownames(hm)#
#
i <- grep("(uncultured$)|([01234567890-]+$)|(group$)", axislabels, perl=T)#
axislabels[i]<-paste(names(axislabels)[i], hm$Family[i])#
j <- grep("(uncultured$)|([01234567890-]+$)|(group$)|([01234567890-]+_fa$)", axislabels, perl=T)#
axislabels[j]<-paste(names(axislabels)[j], hm$Order[j])#
k <- grep("(uncultured_fa$)|([01234567890-]+_or$)", axislabels, perl=T)#
axislabels[k]<-paste(names(axislabels)[k], hm$Phylum[k])#
l <- grep("[01234567890-]+$", axislabels, perl=T)#
axislabels[l]<-paste(names(axislabels)[l], hm$Class[l])
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=Group)
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=SGroup)#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=SGroup)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank())
samplelabels<-c(rep("Indiana", length(indian)),rep("TN Polk Co. Clones", length(tn.neg)-3),rep("TN Polk Co. Bedrun", 3),rep("TN Knox Co. Wild", length(tn.tcd)),rep("WA TCD-negative", length(wa.neg)),rep("WA TCD-positive", length(wa.gm)))
samplelabels
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.labels = element_blank())
heatmap.plot <- hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels)+scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_brewer() + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
library(tanagR)
tanagr_palette("tangara_parzudakii")
colors.subnetworks<-tanagr_palette("tangara_parzudakii")[1:4]
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_manual(values=colors.subnetworks) + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
colors.subnetworks<-tanagr_palette("chlorochrysa_nitidissima")[1:4]
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_manual(values=colors.subnetworks) + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
colors.subnetworks<-tanagr_palette("tangara_chilensis")[1:4]
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_manual(values=colors.subnetworks) + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
colors.subnetworks<-tanagr_palette("dacnis_berlepschi")[1:4]
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_manual(values=colors.subnetworks) + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
tn12$cluster.1
edge(tn.subs)
get_edges
get_edges(tn.subs)
edges(tn.subs)
tn.subs <- make.network.graph("0.01", "0.8", "TN")
wa.subs <- make.network.graph("0.01", "0.8", "WA")
edges(tn.subs)
edge(igraph)
igraph::edges(tn.subs)
igraph::edges(tn12$cluster.1)
igraph::edges(tn.subs) %in% igraph::edges(tn12$cluster.1)
igraph::edges(tn.subs)[[1]]
igraph::edges(tn.subs)[[1]] %in% igraph::edges(tn12$cluster.1)[[1]]
clusters(tn.subs)
g.r0.8.p0.01<-tn.subs
negs<-edge_attr(g.r0.8.p0.01, name= 'r.sign') == 1
gr.r8p01.pos <-delete_edges(g.r0.8.p0.01, which(negs))
dec.subrs.r8p01 <- decompose.graph(gr.r8p01.pos)
dec.subrs.r8p01
clusters(gr.r8p01.pos)
vertex_attr(g.r0.8.p0.01, "Cluster") <- (0 + 1*(clusters(gr.r8p01.pos) == twobiggest[1]) + 2*(clusters(gr.r8p01.pos) == twobiggest[2])) %>% as.factor()
twobiggest[1]
vertex_attr(g.r0.8.p0.01, "Cluster") <- (0 + 1*(clusters(gr.r8p01.pos)$membership == twobiggest[1]) + 2*(clusters(gr.r8p01.pos)$membership == twobiggest[2])) %>% as.factor()
vertex_attr(g.r0.8.p0.01, "Cluster")
g.r0.8.p0.01
vertices(cluster.1)
get.edge.ids(g.r0.8.p0.01, vertices(cluster.1))
nodes(cluster.1)
edge_attr(g.r0.8.p0.01, "name")
as.edgelist(g.r0.8.p0.01)
igraph::as.edgelist(g.r0.8.p0.01)
as.ids(g.r0.8.p0.01)
citation(igraph)
citation('igraph')
E(g.r0.8.p0.01)
E(cluster.1)
E(g.r0.8.p0.01) %in% E(cluster.1)
as.character(E(g.r0.8.p0.01))
names(E(g.r0.8.p0.01))
str(E(g.r0.8.p0.01))
attr(E(g.r0.8.p0.01),"vnames")
attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.1),"vnames")
edge_attr(g.r0.8.p0.01, "ClusterEdge") <- (0 + 1*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.1),"vnames")) + 2*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.2),"vnames"))) %>% as.factor()
edge_attr(g.r0.8.p0.01, "ClusterEdge")
top.clusters <- function (p='0.01', r='0.8', state) {#
	g.r0.8.p0.01 <- make.network.graph(p, r, state)#
#
	# remove negative connections#
	# as.factor(sign(c(1,-8)))#
#
	negs<-edge_attr(g.r0.8.p0.01, name= 'r.sign') == 1#
	gr.r8p01.pos <-delete_edges(g.r0.8.p0.01, which(negs))#
#
	# pull out major subnetworks#
#
	dec.subrs.r8p01 <- decompose.graph(gr.r8p01.pos)#
	clusters(gr.r8p01.pos)#
	twobiggest <- rev(order(clusters(gr.r8p01.pos)$csize))[1:2]#
	cluster.1 <- dec.subrs.r8p01[[twobiggest[1]]]#
	cluster.2 <- dec.subrs.r8p01[[twobiggest[2]]]#
	vertex_attr(g.r0.8.p0.01, "Cluster") <- (0 + 1*(clusters(gr.r8p01.pos)$membership == twobiggest[1]) + 2*(clusters(gr.r8p01.pos)$membership == twobiggest[2])) %>% as.factor()#
	get.edge.ids(g.r0.8.p0.01, nodes(cluster.1))#
	edge_attr(g.r0.8.p0.01, "ClusterEdge") <- (0 + 1*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.1),"vnames")) + 2*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.2),"vnames"))) %>% as.factor()#
	list(cluster.1=cluster.1, cluster.2=cluster.2, net.annot=g.r0.8.p0.01)#
#
}
figure.network <- function (p, r, s, subs=F, subcolors=NULL) {#
#
  gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj)) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj)) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
print(annot.obj)#
  if (is.null(annot.obj)) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
is.null(annot.obj)
mmmm<-NULL
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj)) {gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)}#
  else {gr <- annot.obj}#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor)){#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  }else{#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  }#
}
colors.subnetworks[1:2]
colors.subnetworks
figure.network
tn12$net.annot
wa12 <- top.clusters(state='WA')#
tn12 <- top.clusters(state='TN')
tn12$net.annot
top.clusters <- function (p='0.01', r='0.8', state) {#
	g.r0.8.p0.01 <- make.network.graph(p, r, state)#
#
	# remove negative connections#
	# as.factor(sign(c(1,-8)))#
#
	negs<-edge_attr(g.r0.8.p0.01, name= 'r.sign') == 1#
	gr.r8p01.pos <-delete_edges(g.r0.8.p0.01, which(negs))#
#
	# pull out major subnetworks#
#
	dec.subrs.r8p01 <- decompose.graph(gr.r8p01.pos)#
	clusters(gr.r8p01.pos)#
	twobiggest <- rev(order(clusters(gr.r8p01.pos)$csize))[1:2]#
	cluster.1 <- dec.subrs.r8p01[[twobiggest[1]]]#
	cluster.2 <- dec.subrs.r8p01[[twobiggest[2]]]#
	vertex_attr(g.r0.8.p0.01, "Cluster") <- (0 + 1*(clusters(gr.r8p01.pos)$membership == twobiggest[1]) + 2*(clusters(gr.r8p01.pos)$membership == twobiggest[2])) %>% as.factor()#
	get.edge.ids(g.r0.8.p0.01, nodes(cluster.1))#
	edge_attr(g.r0.8.p0.01, "ClusterEdge") <- (0 + 1*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.1),"vnames")) + 2*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.2),"vnames"))) %>% as.factor()#
	list(cluster.1=cluster.1, cluster.2=cluster.2, net.annot=g.r0.8.p0.01)#
#
}
wa12 <- top.clusters(state='WA')
tn12 <- top.clusters(state='TN')
top.clusters <- function (p='0.01', r='0.8', state) {#
	g.r0.8.p0.01 <- make.network.graph(p, r, state)#
#
	# remove negative connections#
	# as.factor(sign(c(1,-8)))#
#
	negs<-edge_attr(g.r0.8.p0.01, name= 'r.sign') == 1#
	gr.r8p01.pos <-delete_edges(g.r0.8.p0.01, which(negs))#
#
	# pull out major subnetworks#
#
	dec.subrs.r8p01 <- decompose.graph(gr.r8p01.pos)#
	clusters(gr.r8p01.pos)#
	twobiggest <- rev(order(clusters(gr.r8p01.pos)$csize))[1:2]#
	cluster.1 <- dec.subrs.r8p01[[twobiggest[1]]]#
	cluster.2 <- dec.subrs.r8p01[[twobiggest[2]]]#
	vertex_attr(g.r0.8.p0.01, "Cluster") <- (0 + 1*(clusters(gr.r8p01.pos)$membership == twobiggest[1]) + 2*(clusters(gr.r8p01.pos)$membership == twobiggest[2])) %>% as.factor()#
#
	edge_attr(g.r0.8.p0.01, "ClusterEdge") <- (0 + 1*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.1),"vnames")) + 2*(attr(E(g.r0.8.p0.01),"vnames") %in% attr(E(cluster.2),"vnames"))) %>% as.factor()#
	list(cluster.1=cluster.1, cluster.2=cluster.2, net.annot=g.r0.8.p0.01)#
#
}#
#
wa12 <- top.clusters(state='WA')#
tn12 <- top.clusters(state='TN')
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj)) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolor))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
figure.network <- function (p, r, s, subs=F, subcolors=NULL, annot.obj=NULL) {#
#
  if (is.null(annot.obj)) gr <- make.network.graph(p, r, s, subs=F, subcolors=subcolors)#
  else gr <- annot.obj#
  layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))#
  if(is.null(subcolors))#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) + #
    scale_edge_color_manual(values=c('grey','blue')) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
  else#
	ggraph(gr, layout) + #
    geom_edge_link(aes(width=.1, color=as.factor(ClusterEdge))) + #
    scale_edge_color_manual(values=c('grey',subcolors)) + #
    scale_edge_width(range=c(0.2,1)) + #
    geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(Cluster))) + #
    scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('grey',subcolors)) +#
    scale_shape_manual(values=c(1,19,8)) + #
    theme_graph() + #
    theme(legend.position='none')#
}
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=wa12$net.annot)
figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)
figure.network(subcolors = colors.subnetworks[3:4], annot.obj=wa12$net.annot)
heatmap.plot <- hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_manual(values=colors.subnetworks) + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank())
heatmap.plot
wa.nets.plot.annot <- figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)#
tn.nets.plot.annot <- figure.network(subcolors = colors.subnetworks[3:4], annot.obj=wa12$net.annot)
lay <- rbind(c(1,2),c(1,3))
lay <- rbind(c(1,1,2),c(1,1,3))
grid.arrange(heatmap.plot,wa.nets.plot.annot,tn.nets.plot.annot)
grid.arrange(heatmap.plot,wa.nets.plot.annot,tn.nets.plot.annot, layout=lay)
grid.arrange(heatmap.plot,wa.nets.plot.annot,tn.nets.plot.annot, layout_matrix=lay)
wa.nets.plot.annot <- figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)+labs(title="Tennessee")#
tn.nets.plot.annot <- figure.network(subcolors = colors.subnetworks[3:4], annot.obj=wa12$net.annot)+labs(titles="Washington")#
 lay <- rbind(c(1,1,2),c(1,1,3))#
grid.arrange(heatmap.plot,wa.nets.plot.annot,tn.nets.plot.annot, layout_matrix=lay)
capitalize
capitalize("shavings")
grid.arrange(#
      figure.network("0.01", "0.8", "IN"),#
      figure.network("0.01", "0.8", "TN"),#
      figure.network("0.01", "0.8", "WA"),#
      figure.network("0.00001", "0.8", "IN", tissue="soils"),#
      figure.network("0.00001", "0.8", tissue="soils"),#
      figure.network("0.00001", "0.8", tissue="soils"),#
      nrow=2#
    )
source("Net.complex.functions.R")
grid.arrange(#
      figure.network("0.01", "0.8", "IN"),#
      figure.network("0.01", "0.8", "TN"),#
      figure.network("0.01", "0.8", "WA"),#
      figure.network("0.00001", "0.8", "IN", tissue="soils"),#
      figure.network("0.00001", "0.8", tissue="soils"),#
      figure.network("0.00001", "0.8", tissue="soils"),#
      nrow=2#
    )
grid.arrange(#
      figure.network("0.01", "0.8", "IN"),#
      figure.network("0.01", "0.8", "TN"),#
      figure.network("0.01", "0.8", "WA"),#
      figure.network("0.00001", "0.8", "IN", tissue="soils"),#
      figure.network("0.00001", "0.8", "TN", tissue="soils"),#
      figure.network("0.00001", "0.8", "WA", tissue="soils"),#
      nrow=2#
    )
setwd(".")#
#
library(tidyverse)#
library(Hmisc)#
library(MASS)#
library(igraph)#
library(tidygraph)#
library(ggraph)#
library(gridExtra)#
library(phyloseq)#
#
source("Net.complex.functions.R")#
#
load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")#
#
soils.merge.df <- otu_table(soils.merge) %>% t() %>% as.data.frame()
out <- read.csv("Results/Network.complexity.soil.csv")[,-1]
net.complex.multipanel (out)
source("Net.complex.functions.R")
warnings()
net.complex.multipanel (out, which.leg="first")
net.complex.multipanel (out[out$P<0.00005,], which.leg="first")
out <- read.csv("Results/Network.complexity.caulosphere.csv")[,-1]
net.complex.multipanel (out)
net.complex.multipanel (out[out$P<0.05,])
net.complex.multipanel (out[out$P<0.05,],which.leg="first")
setwd(".")#
#
library(tidyr)#
library(Hmisc)#
library(MASS)#
library(igraph)#
library(tidygraph)#
library(ggraph)#
library(gridExtra)#
library(QuACN)#
library(acss)#
library(phyloseq)#
library(vegan)#
library(reshape2)#
library(tanagR)#
#
source("Net.complex.functions.R")#
#
load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")#
#
shavings.merge.df <- otu_table(shavings.merge) %>% t() %>% as.data.frame()
grid.arrange(#
      figure.network("0.01", "0.8", "IN")+labs(title="A"),#
      figure.network("0.01", "0.8", "TN")+labs(title="B"),#
      figure.network("0.01", "0.8", "WA")+labs(title="C"),#
      figure.network("0.00001", "0.8", "IN", tissue="soils")+labs(title="D"),#
      figure.network("0.00001", "0.8", "TN", tissue="soils")+labs(title="E"),#
      figure.network("0.00001", "0.8", "WA", tissue="soils")+labs(title="F"),#
      nrow=2#
    )
source("Net.complex.functions.R")
grid.arrange(#
      figure.network("0.01", "0.8", "IN")+labs(title="A. IN Caulosphere"),#
      figure.network("0.01", "0.8", "TN")+labs(title="B. TN Caulosphere"),#
      figure.network("0.01", "0.8", "WA")+labs(title="C. WN Caulosphere"),#
      figure.network("0.00001", "0.8", "IN", tissue="soils")+labs(title="D. IN Soil"),#
      figure.network("0.00001", "0.8", "TN", tissue="soils")+labs(title="E. TN Soil"),#
      figure.network("0.00001", "0.8", "WA", tissue="soils")+labs(title="F. WA Soil"),#
      nrow=2#
    )
grid.arrange(#
      figure.network("0.01", "0.8", "IN")+labs(title="A", subtitle="IN Caulosphere"),#
      figure.network("0.01", "0.8", "TN")+labs(title="B", subtitle="TN Caulosphere"),#
      figure.network("0.01", "0.8", "WA")+labs(title="C", subtitle="WA Caulosphere"),#
      figure.network("0.00001", "0.8", "IN", tissue="soils")+labs(title="D", subtitle="IN Soil"),#
      figure.network("0.00001", "0.8", "TN", tissue="soils")+labs(title="E", subtitle="TN Soil"),#
      figure.network("0.00001", "0.8", "WA", tissue="soils")+labs(title="F", subtitle="WA Soil"),#
      nrow=2#
    )
wa12 <- top.clusters(state='WA')#
tn12 <- top.clusters(state='TN')#
#
# just hub OTUs from the two clusters #
wa.clust.1.otus <- with(wa12,vertex_attr(cluster.1,"name")[as.logical(vertex_attr(cluster.1,"hub"))])#
wa.clust.2.otus <- with(wa12,vertex_attr(cluster.2,"name")[as.logical(vertex_attr(cluster.2,"hub"))])#
#
tn.clust.1.otus <- with(tn12,vertex_attr(cluster.1,"name")[as.logical(vertex_attr(cluster.1,"hub"))])#
tn.clust.2.otus <- with(tn12,vertex_attr(cluster.2,"name")[as.logical(vertex_attr(cluster.2,"hub"))])#
#
# Trees that tested positive for GM with the probe were WA55RN1, WA130RN4, and WA132RN9. There were five other trees that only tested positive once. Those include the WA132 (the remaining two), WA272RN10, and WAWTBNL22, WAWTBNL23#
# rownames(shavings.merge.df[,clust.1.otus])#
#
wa.gm <- c("WA_RN1_55s_S44","WA_RN4_130s_S21","WA_RN9_132s_S61","WA_RN8_132s_S53","WA_RN7_132s_S37","WA_BNL23_WTs_S6","WA_BNL22_WTs_S45")#
wa.neg<- c("WA_BNL18_272s_S85","WA_BNL19_55s_S13","WA_BNL21_WTs_S93")#
#
# Trees in TCD positive and negative location in TN#
#
tn.tcd <- rownames(shavings.merge.df)[regexpr("TN_LS",rownames(shavings.merge.df),perl=T)==1]#
tn.neg <- rownames(shavings.merge.df)[regexpr("TN",rownames(shavings.merge.df),perl=T)==1] %>% setdiff(tn.tcd)#
#
indian <- rownames(shavings.merge.df)[regexpr("IN_",rownames(shavings.merge.df),perl=T)==1] %>% setdiff(tn.tcd)#
#
intersect(wa.clust.1.otus,tn.clust.1.otus)#
intersect(wa.clust.1.otus,tn.clust.2.otus)#
intersect(wa.clust.2.otus,tn.clust.1.otus)#
intersect(wa.clust.2.otus,tn.clust.2.otus)#
#
shavings.merge.df[] <- lapply(shavings.merge.df, function(x) as.numeric(as.character(x)))#
#
# cluster 1 and 2 for gm#
shavings.merge.df[wa.gm,wa.clust.1.otus] %>% t() %>% cbind(tax_table(shavings.merge)[wa.clust.1.otus],.) %>% as.data.frame()#
shavings.merge.df[wa.gm,wa.clust.2.otus] %>% t() %>% cbind(tax_table(shavings.merge)[wa.clust.2.otus],.) %>% as.data.frame()#
#
# cluster 1 and 2 for neg trees#
shavings.merge.df[wa.neg,wa.clust.1.otus] %>% t() %>% cbind(tax_table(shavings.merge)[wa.clust.1.otus],.) %>% as.data.frame()#
shavings.merge.df[wa.neg,wa.clust.2.otus] %>% t() %>% cbind(tax_table(shavings.merge)[wa.clust.2.otus],.) %>% as.data.frame()#
#
# cluster 1  for tn knox and tn polk#
shavings.merge.df[tn.tcd,tn.clust.1.otus] %>% t() %>% cbind(tax_table(shavings.merge)[tn.clust.1.otus],.) %>% as.data.frame()#
shavings.merge.df[tn.neg,tn.clust.1.otus] %>% t() %>% cbind(tax_table(shavings.merge)[tn.clust.1.otus],.) %>% as.data.frame()#
#
# cluster 2 for tn tn knox and tn polk#
shavings.merge.df[tn.tcd,tn.clust.2.otus] %>% t() %>% cbind(tax_table(shavings.merge)[tn.clust.2.otus],.) %>% as.data.frame()#
shavings.merge.df[tn.neg,tn.clust.2.otus] %>% t() %>% cbind(tax_table(shavings.merge)[tn.clust.2.otus],.) %>% as.data.frame()#
#
# combine wa cluster 1 and 2, tn cluster 1 and 2#
#
hm <- shavings.merge.df[c(indian,tn.neg,tn.tcd,wa.neg,wa.gm),c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)] %>% t() %>% cbind(tax_table(shavings.merge)[c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)],.) %>% as.data.frame()#
#
hm[,-c(1:7)] <- lapply(hm[,-c(1:7)], function(x) as.numeric(as.character(x)))#
#
#hm.melt <- (1-(hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1))) %>% cbind(data.frame(OTU=rownames(hm), Cluster = c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample") #
#
hm.melt <- hm[,-c(1:7)] %>% decostand(method="log") %>% decostand(.,method="max", MARGIN=1) %>% cbind(data.frame(OTU=rownames(hm), Cluster = as.factor(c(rep(1,length(tn.clust.1.otus)),rep(2,length(tn.clust.2.otus)),rep(3,length(wa.clust.1.otus)),rep(4,length(wa.clust.2.otus)))))) %>% melt(id.vars=c("OTU","Cluster"),variable.name="Sample") #
#
hm.melt$Sample <- factor(hm.melt$Sample, c(indian,tn.neg,tn.tcd,wa.neg,wa.gm))#
#
hm.melt$OTU <- factor(hm.melt$OTU, rev(c(tn.clust.1.otus,tn.clust.2.otus,wa.clust.1.otus,wa.clust.2.otus)))#
#
axislabels <- with(hm, paste(rownames(hm), gsub("[sgfocp]__","",Genus,perl=T) %>% gsub("_"," ",.,perl=T) %>% gsub("[\\s]?(unclassified|ge)[\\s]?","",.,perl=T)%>% gsub("\\([A-Za-z0-9 _]*\\)"," ",.,perl=T)))#
names(axislabels) <- rownames(hm)#
#
i <- grep("(uncultured$)|([01234567890-]+$)|(group$)", axislabels, perl=T)#
axislabels[i]<-paste(names(axislabels)[i], hm$Family[i])#
j <- grep("(uncultured$)|([01234567890-]+$)|(group$)|([01234567890-]+_fa$)", axislabels, perl=T)#
axislabels[j]<-paste(names(axislabels)[j], hm$Order[j])#
k <- grep("(uncultured_fa$)|([01234567890-]+_or$)", axislabels, perl=T)#
axislabels[k]<-paste(names(axislabels)[k], hm$Phylum[k])#
l <- grep("[01234567890-]+$", axislabels, perl=T)#
axislabels[l]<-paste(names(axislabels)[l], hm$Class[l])#
#
samplelabels<-c(rep("Indiana", length(indian)),rep("TN Polk Co. Clones", length(tn.neg)-3),rep("TN Polk Co. Bedrun", 3),rep("TN Knox Co. Wild", length(tn.tcd)),rep("WA TCD-negative", length(wa.neg)),rep("WA TCD-positive", length(wa.gm)))#
#
colors.subnetworks<-tanagr_palette("dacnis_berlepschi")[1:4]#
#
hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=value)) + geom_tile() + scale_fill_gradient(low="white", high="black") + theme(axis.text.x = element_text(angle=90, size=6), legend.position = "none", axis.text.y = element_text(hjust=0))+ scale_y_discrete(labels=axislabels)#
#
heatmap.plot <- hm.melt %>% ggplot(., aes(x=Sample, y=OTU, fill=Cluster, alpha=value)) + geom_tile() + scale_fill_manual(values=colors.subnetworks) + scale_alpha_continuous(range=c(0,1)) + scale_y_discrete(labels=axislabels) + scale_x_discrete(labels=samplelabels)+#
  theme_bw() +#
  theme(axis.text.x = element_text(angle=90, size=6),#
  legend.position = "none",#
  axis.text.y = element_text(hjust=0),#
  axis.line = element_line(colour = "black"),#
    panel.grid.major = element_blank(),#
    panel.grid.minor = element_blank(),#
    panel.border = element_blank(),#
    panel.background = element_blank(),#
    axis.title.x = element_blank(),#
    axis.title.y = element_blank()) #
#
## function to create netwrok graph object#
## make side networks as a legend#
#
wa.nets.plot.annot <- figure.network(subcolors = colors.subnetworks[1:2], annot.obj=tn12$net.annot)+labs(title="Tennessee")#
tn.nets.plot.annot <- figure.network(subcolors = colors.subnetworks[3:4], annot.obj=wa12$net.annot)+labs(titles="Washington")#
 lay <- rbind(c(1,1,2),c(1,1,3))
grid.arrange(heatmap.plot,wa.nets.plot.annot,tn.nets.plot.annot, layout_matrix=lay)
