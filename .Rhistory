load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")
shavings.merge.df <- otu_table(shavings.merge) %>% t() %>% as.data.frame()
state.f <- regmatches(row.names(shavings.merge.df), regexpr("(IN|TN|WA)", row.names(shavings.merge.df), perl=T))
for (cur.s in c("WA","IN","TN")) {
## select only those OTUS that occur in WA/IN/TN at least 1 time in at least 3 samples
xx <- sapply(1:dim(shavings.merge.df)[2], FUN= function (x) sum( shavings.merge.df[state.f==cur.s, x] > 0 ) > 3)
###
### make correlation table with merged shavings and shavings data
r_otu.all <- rcorr(as.matrix(shavings.merge.df[state.f==cur.s,xx]), type='spearman')
triangle <- upper.tri(r_otu.all$r,diag=T)
r_otu.all$r[triangle] <- NA
r_otu.all$P[triangle] <- NA
r.otus <-reshape2::melt(r_otu.all$r, na.rm=T, value.name="r")
p.otus <-reshape2::melt(r_otu.all$P, na.rm=T, value.name="p")
cyto.unlisted.all <- cbind(r.otus, data.frame(p=p.otus$p))
cyto.unlisted.all$r.sign <- as.numeric(cyto.unlisted.all$r > 0)
setwd(paste("./Net.analysis/CorrNetworks.", cur.s, sep=""))
# correlation networks
cyto.unlisted.all[cyto.unlisted.all$p < 0.05 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.05.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.05 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.05.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.01 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.01.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.01 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.01.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.005 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.005.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.005 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.005.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.001 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.001.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.001 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.001.r.0.8.txt', quote=F, sep="	", row.names=F)
data.bd <- data.frame(name=NULL, BetweennessCentrality=NULL, Degree=NULL, p=NULL, r=NULL)
for (i in c("0.05","0.01","0.005", "0.001")) {
for (cutoff in c("0.6","0.8")) {
gr <-read.csv(paste("cyto.shavings.merged.p.", i, ".r.", cutoff,".txt", sep = ''), sep='\t') %>% as.matrix() %>% graph_from_data_frame(directed =F)
cyto <- data.frame(Degree = degree(gr))
cyto$BetweennessCentrality = betweenness(gr)
degree.w<-fitdistr(cyto$Degree, 'Weibull')
cutoff.d<-qweibull(0.9, degree.w$estimate[1], degree.w$estimate[2])
out.d <- cyto$Degree > cutoff.d
betweenness.exp <- fitdistr(cyto$BetweennessCentrality, "exponential")
cutoff.b<-qexp(0.9, rate = betweenness.exp $estimate)
out.b <- cyto$BetweennessCentrality > cutoff.b
prefix <- paste("cyto.shavings.merged.p.", i, ".r.", cutoff, ".network.analysis", sep = '')
cyto[out.b & out.d,] %>% write.csv(.,paste(prefix, '.bd.csv', sep=''), quote=F,row.names=T)
cyto$name=rownames(cyto)
data.bd <- rbind(data.bd, cbind(cyto[out.d & out.b,c('name','BetweennessCentrality','Degree')], p=i, r=cutoff), make.row.names=F)
}}
bd.tab <- with(data.bd, data.frame(name=unique(name)))
bd.tab$p0.05.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.05' & data.bd$r=='0.6','name'])
bd.tab$p0.01.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.01' & data.bd$r=='0.6','name'])
bd.tab$p0.005.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.005' & data.bd$r=='0.6','name'])
bd.tab$p0.001.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.0001' & data.bd$r=='0.6','name'])
bd.tab$p0.05.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.05' & data.bd$r=='0.8','name'])
bd.tab$p0.01.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.01' & data.bd$r=='0.8','name'])
bd.tab$p0.005.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.005' & data.bd$r=='0.8','name'])
bd.tab$p0.001.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.0001' & data.bd$r=='0.8','name'])
bd.tab %>% cbind( tax_table(shavings.merge)[as.character(bd.tab$name),], .) %>% write.csv(., paste("../../Results/Shavings.HubOTUS.", cur.s, ".csv", sep=""), quote=F, row.names=T)
# matches
otunames.rf <- read.csv("../../Results/RF.shavings.t.table.csv", row.names=1)
otunames.rf[bd.tab$name,] %>% write.csv(., paste("../../Results/Shavings.HubOTUS.RF.consensus.", cur.s, ".csv", sep=""), quote=F, row.names=T)
setwd("../..")
}
figure.network <- function (p, r, s, subs=F) {
gr <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,1:3] %>% as.matrix() %>% graph_from_data_frame(directed =F)
edge_attr(gr, name= 'r.sign') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% sign() %>% as.factor()
edge_attr(gr, name= 'r.abs') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% abs() %>% as.numeric()
vertex_attr(gr, name='deg') <- degree(gr)
vertex_attr(gr, name='fu.ba') <- (vertex_attr(gr, 'name') %>% grepl('Botu',.) ) %>% as.numeric()
bd.tab <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/Shavings.HubOTUS.", s, ".csv", sep=""), row.names = 1)
vertex_attr(gr, name='hub') <- vertex_attr(gr, 'name') %in% rownames(bd.tab)[bd.tab[, paste("p",p,".r",r,sep="")] == 1] %>% as.numeric()
if (s == "WA") {
vertex_attr(gr, name='hub') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric) + vertex_attr(gr, name='hub'))
vertex_attr(gr, name='fu.ba') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric)*2 + vertex_attr(gr, name='fu.ba'))
}
if (!subs) {
dec.subrs <- decompose.graph(gr)
cl.gr.i <- which.max(clusters(gr)$csize)
gr <- dec.subrs[[cl.gr.i]]
}
layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))
ggraph(gr, layout) +
geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) +
scale_edge_color_manual(values=c('grey','blue')) +
scale_edge_width(range=c(0.2,1)) +
geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) +
scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +
scale_shape_manual(values=c(1,19,8)) +
theme_graph() +
theme(legend.position='none')
}
for (p in c("0.05","0.01","0.005", "0.001")) {
for (r in c("0.6","0.8")) {
pdf(paste("Net.analysis/Net.figures/Shavings/Allstates.networks.caulo.", "p", p, ".r", r, ".nosubnets.pdf", sep=""), width=12, height=6)
grid.arrange(
figure.network(p, r, "IN"),
figure.network(p, r, "TN"),
figure.network(p, r, "WA"),
nrow=1,
top=paste("p = ", p, "r = ", r, sep="")
)
dev.off()
pdf(paste("Net.analysis/Net.figures/Shavings/Subnetworks/Allstates.networks.caulo.", "p", p, ".r", r, ".wsubnets.pdf", sep=""), width=12, height=6)
grid.arrange(
figure.network(p, r, "IN", T),
figure.network(p, r, "TN", T),
figure.network(p, r, "WA", T),
nrow=1,
top=paste("p = ", p, "r = ", r, sep="")
)
dev.off()
}}
getwd()
paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')
paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = '')
s<-"IN"
p<-"0.05"
r<-"0.6"
gr <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,1:3] %>% as.matrix() %>% graph_from_data_frame(directed =F)
gr
edge_attr(gr, name= 'r.sign') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% sign() %>% as.factor()
edge_attr(gr, name= 'r.abs') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% abs() %>% as.numeric()
vertex_attr(gr, name='deg') <- degree(gr)
vertex_attr(gr, name='fu.ba') <- (vertex_attr(gr, 'name') %>% grepl('Botu',.) ) %>% as.numeric()
bd.tab <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/Shavings.HubOTUS.", s, ".csv", sep=""), row.names = 1)
bd.tab <- read.csv(paste("Results/Shavings.HubOTUS.", s, ".csv", sep=""), row.names = 1)
figure.network <- function (p, r, s, subs=F) {
gr <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,1:3] %>% as.matrix() %>% graph_from_data_frame(directed =F)
edge_attr(gr, name= 'r.sign') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% sign() %>% as.factor()
edge_attr(gr, name= 'r.abs') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% abs() %>% as.numeric()
vertex_attr(gr, name='deg') <- degree(gr)
vertex_attr(gr, name='fu.ba') <- (vertex_attr(gr, 'name') %>% grepl('Botu',.) ) %>% as.numeric()
bd.tab <- read.csv(paste("Results/Shavings.HubOTUS.", s, ".csv", sep=""), row.names = 1)
vertex_attr(gr, name='hub') <- vertex_attr(gr, 'name') %in% rownames(bd.tab)[bd.tab[, paste("p",p,".r",r,sep="")] == 1] %>% as.numeric()
if (s == "WA") {
vertex_attr(gr, name='hub') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric) + vertex_attr(gr, name='hub'))
vertex_attr(gr, name='fu.ba') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric)*2 + vertex_attr(gr, name='fu.ba'))
}
if (!subs) {
dec.subrs <- decompose.graph(gr)
cl.gr.i <- which.max(clusters(gr)$csize)
gr <- dec.subrs[[cl.gr.i]]
}
layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))
ggraph(gr, layout) +
geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) +
scale_edge_color_manual(values=c('grey','blue')) +
scale_edge_width(range=c(0.2,1)) +
geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) +
scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +
scale_shape_manual(values=c(1,19,8)) +
theme_graph() +
theme(legend.position='none')
}
for (p in c("0.05","0.01","0.005", "0.001")) {
for (r in c("0.6","0.8")) {
pdf(paste("Net.analysis/Net.figures/Shavings/Allstates.networks.caulo.", "p", p, ".r", r, ".nosubnets.pdf", sep=""), width=12, height=6)
grid.arrange(
figure.network(p, r, "IN"),
figure.network(p, r, "TN"),
figure.network(p, r, "WA"),
nrow=1,
top=paste("p = ", p, "r = ", r, sep="")
)
dev.off()
pdf(paste("Net.analysis/Net.figures/Shavings/Subnetworks/Allstates.networks.caulo.", "p", p, ".r", r, ".wsubnets.pdf", sep=""), width=12, height=6)
grid.arrange(
figure.network(p, r, "IN", T),
figure.network(p, r, "TN", T),
figure.network(p, r, "WA", T),
nrow=1,
top=paste("p = ", p, "r = ", r, sep="")
)
dev.off()
}}
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
library(tidyr)
library(Hmisc)
library(MASS)
library(igraph)
library(tidygraph)
library(ggraph)
library(gridExtra)
library(phyloseq)
load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")
soils.merge.df <- otu_table(soils.merge) %>% t() %>% as.data.frame()
state.f <- regmatches(row.names(soils.merge.df), regexpr("(IN|TN|WA)", row.names(soils.merge.df), perl=T))
for (cur.s in c("WA","IN","TN")) {
## select only those OTUS that occur in WA/IN/TN at least 5 times in at least 5 samples
xx <- sapply(1:dim(soils.merge.df)[2], FUN= function (x) sum( soils.merge.df[state.f==cur.s, x] > 5 ) > 5)
###
### make correlation table with merged soils and soils data
r_otu.all <- rcorr(as.matrix(soils.merge.df[state.f==cur.s,xx]), type='spearman')
triangle <- upper.tri(r_otu.all$r,diag=T)
r_otu.all$r[triangle] <- NA
r_otu.all$P[triangle] <- NA
r.otus <-reshape2::melt(r_otu.all$r, na.rm=T, value.name="r")
p.otus <-reshape2::melt(r_otu.all$P, na.rm=T, value.name="p")
cyto.unlisted.all <- cbind(r.otus, data.frame(p=p.otus$p))
cyto.unlisted.all$r.sign <- as.numeric(cyto.unlisted.all$r > 0)
setwd(paste("./Net.analysis/CorrNetworks.", cur.s, sep=""))
# correlation networks
cyto.unlisted.all[cyto.unlisted.all$p < 0.00001 & abs(cyto.unlisted.all$r) > 0.6,]  %>% write.table(., 'cyto.soils.merged.p.0.00001.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.00001 & abs(cyto.unlisted.all$r) > 0.8,]  %>% write.table(., 'cyto.soils.merged.p.0.00001.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.00005 & abs(cyto.unlisted.all$r) > 0.6,]  %>% write.table(., 'cyto.soils.merged.p.0.00005.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.00005 & abs(cyto.unlisted.all$r) > 0.8,]  %>% write.table(., 'cyto.soils.merged.p.0.00005.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.000005 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.soils.merged.p.0.000005.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.000005 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.soils.merged.p.0.000005.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.000001 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.soils.merged.p.0.000001.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.000001 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.soils.merged.p.0.000001.r.0.8.txt', quote=F, sep="	", row.names=F)
data.bd <- data.frame(name=NULL, BetweennessCentrality=NULL, Degree=NULL, p=NULL, r=NULL)
for (i in c( "0.00005","0.00001","0.000005","0.000001")) {
for (cutoff in c("0.6","0.8")) {
gr <-read.csv(paste("cyto.soils.merged.p.", i, ".r.", cutoff,".txt", sep = ''), sep='\t') %>% as.matrix() %>% graph_from_data_frame(directed =F)
cyto <- data.frame(Degree = degree(gr))
cyto$BetweennessCentrality = betweenness(gr)
degree.w<-fitdistr(cyto$Degree, 'Weibull')
cutoff.d<-qweibull(0.9, degree.w$estimate[1], degree.w$estimate[2])
out.d <- cyto$Degree > cutoff.d
betweenness.exp <- fitdistr(cyto$BetweennessCentrality, "exponential")
cutoff.b<-qexp(0.9, rate = betweenness.exp $estimate)
out.b <- cyto$BetweennessCentrality > cutoff.b
prefix <- paste("cyto.soils.merged.p.", i, ".r.", cutoff, ".network.analysis", sep = '')
cyto[out.b & out.d,] %>% write.csv(.,paste(prefix, '.bd.csv', sep=''), quote=F,row.names=T)
cyto$name=rownames(cyto)
data.bd <- rbind(data.bd, cbind(cyto[out.d & out.b,c('name','BetweennessCentrality','Degree')], p=i, r=cutoff), make.row.names=F)
}}
bd.tab <- with(data.bd, data.frame(name=unique(name)))
bd.tab$p0.00005.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.00005' & data.bd$r=='0.6','name'])
bd.tab$p0.00001.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.00001' & data.bd$r=='0.6','name'])
bd.tab$p0.000005.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.000005' & data.bd$r=='0.6','name'])
bd.tab$p0.000001.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.000001' & data.bd$r=='0.6','name'])
bd.tab$p0.00005.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.00005' & data.bd$r=='0.8','name'])
bd.tab$p0.00001.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.00001' & data.bd$r=='0.8','name'])
bd.tab$p0.000005.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.000005' & data.bd$r=='0.8','name'])
bd.tab$p0.000001.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.000001' & data.bd$r=='0.8','name'])
bd.tab %>% cbind( tax_table(soils.merge)[as.character(bd.tab$name),], .) %>% write.csv(., paste("../../Results/Soils.HubOTUS.", cur.s, ".csv", sep=""), quote=F, row.names=T)
# matches
otunames.rf <- read.csv("../../Results/RF.soil.t.table.csv", row.names=1)
otunames.rf[as.character(bd.tab$name),] %>% write.csv(., paste("../../Results/Soils.HubOTUS.RF.consensus.", cur.s, ".csv", sep=""), quote=F, row.names=T)
setwd("../..")
}
figure.network <- function (p, r, s, subs=F) {
gr <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.soils.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,1:3] %>% as.matrix() %>% graph_from_data_frame(directed =F)
edge_attr(gr, name= 'r.sign') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.soils.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% sign() %>% as.factor()
edge_attr(gr, name= 'r.abs') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.soils.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% abs() %>% as.numeric()
vertex_attr(gr, name='deg') <- degree(gr)
vertex_attr(gr, name='fu.ba') <- (vertex_attr(gr, 'name') %>% grepl('Botu',.) ) %>% as.numeric()
bd.tab <- read.csv(paste("Results/Soils.HubOTUS.", s, ".csv", sep=""), row.names = 1)
vertex_attr(gr, name='hub') <- vertex_attr(gr, 'name') %in% rownames(bd.tab)[bd.tab[, paste("p",p,".r",r,sep="")] == 1] %>% as.numeric()
if (s == "WA") {
vertex_attr(gr, name='hub') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric) + vertex_attr(gr, name='hub'))
vertex_attr(gr, name='fu.ba') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric)*2 + vertex_attr(gr, name='fu.ba'))
}
if (!subs) {
dec.subrs <- decompose.graph(gr)
cl.gr.i <- which.max(clusters(gr)$csize)
gr <- dec.subrs[[cl.gr.i]]
}
layout <- layout_with_kk(gr, weights=2 - as.numeric(edge_attr(gr, 'r')))
ggraph(gr, layout) +
geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) +
scale_edge_color_manual(values=c('grey','blue')) +
scale_edge_width(range=c(0.2,1)) +
geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) +
scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +
scale_shape_manual(values=c(1,19,8)) +
theme_graph() +
theme(legend.position='none')
}
install.packages("corrplot")
library(knitr)
library(rmarkdown)
figure.network <- function (p, r, s, subs=F) {
gr <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.soils.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,1:3] %>% as.matrix() %>% graph_from_data_frame(directed =F)
edge_attr(gr, name= 'r.sign') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.soils.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% sign() %>% as.factor()
edge_attr(gr, name= 'r.abs') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.soils.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% abs() %>% as.numeric()
vertex_attr(gr, name='deg') <- degree(gr)
vertex_attr(gr, name='fu.ba') <- (vertex_attr(gr, 'name') %>% grepl('Botu',.) ) %>% as.numeric()
bd.tab <- read.csv(paste("Results/Soils.HubOTUS.", s, ".csv", sep=""), row.names = 1)
vertex_attr(gr, name='hub') <- vertex_attr(gr, 'name') %in% rownames(bd.tab)[bd.tab[, paste("p",p,".r",r,sep="")] == 1] %>% as.numeric()
if (s == "WA") {
vertex_attr(gr, name='hub') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric) + vertex_attr(gr, name='hub'))
vertex_attr(gr, name='fu.ba') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric)*2 + vertex_attr(gr, name='fu.ba'))
}
if (!subs) {
dec.subrs <- decompose.graph(gr)
cl.gr.i <- which.max(clusters(gr)$csize)
gr <- dec.subrs[[cl.gr.i]]
}
layout <- layout_with_kk(gr, weights=2 - as.numeric(edge_attr(gr, 'r')))
ggraph(gr, layout) +
geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) +
scale_edge_color_manual(values=c('grey','blue')) +
scale_edge_width(range=c(0.2,1)) +
geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) +
scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +
scale_shape_manual(values=c(1,19,8)) +
theme_graph() +
theme(legend.position='none')
}
for (p in c( "0.00005", "0.00001","0.000005","0.000001")) {
for (r in c("0.6","0.8")) {
pdf(paste("Net.analysis/Net.figures/Soil/Allstates.networks.soil.", "p", p, ".r", r, ".nosubnets.pdf", sep=""), width=12, height=6)
grid.arrange(
figure.network(p, r, "IN"),
figure.network(p, r, "TN"),
figure.network(p, r, "WA"),
nrow=1,
top=paste("p = ", p, "r = ", r, sep="")
)
dev.off()
pdf(paste("Net.analysis/Net.figures/Soil/Subnetworks/Allstates.networks.soil.", "p", p, ".r", r, ".wsubnets.pdf", sep=""), width=12, height=6)
grid.arrange(
figure.network(p, r, "IN", T),
figure.network(p, r, "TN", T),
figure.network(p, r, "WA", T),
nrow=1,
top=paste("p = ", p, "r = ", r, sep="")
)
dev.off()
}}
?layout_with_kk
getwd()
# Load in the data and create a dataframe called shavings.merge.df out of the OTU table
load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")
shavings.merge.df <- otu_table(shavings.merge) %>% t() %>% as.data.frame()
state.f <- regmatches(row.names(shavings.merge.df), regexpr("(IN|TN|WA)", row.names(shavings.merge.df), perl=T))
cur.s <- "WA"
# Load in the data and create a dataframe called shavings.merge.df out of the OTU table
load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")
shavings.merge.df <- otu_table(shavings.merge) %>% t() %>% as.data.frame()
state.f <- regmatches(row.names(shavings.merge.df), regexpr("(IN|TN|WA)", row.names(shavings.merge.df), perl=T))
cur.s <- "WA"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```{r, include=FALSE, cache=T}
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron Manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
---
title: "Network Analysis with Juglans nigra microbiome"
output: html_document
editor_options:
chunk_output_type: console
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r, include=FALSE, cache=T}
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron Manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
```
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron Manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
library(tidyverse)
library(Hmisc)
library(MASS)
library(igraph)
library(tidygraph)
library(ggraph)
library(gridExtra)
library(phyloseq)
# Load in the data and create a dataframe called shavings.merge.df out of the OTU table
load("R_Environments/Jnigra.microbiome.merged.WilliamsOnufrak.RData")
shavings.merge.df <- otu_table(shavings.merge) %>% t() %>% as.data.frame()
state.f <- regmatches(row.names(shavings.merge.df), regexpr("(IN|TN|WA)", row.names(shavings.merge.df), perl=T))
cur.s <- "WA"
## select only those OTUS that occur in WA/IN/TN at least 1 time in at least 3 samples
## store in xx which columns (OTUs) we want to pull from shavings.merge.df for analysis.
xx <- sapply(1:dim(shavings.merge.df)[2], FUN= function (x) sum( shavings.merge.df[state.f==cur.s, x] > 0 ) > 3)
### Make a Spearman rank correlation table with merged shavings data for state = cur.s (WA)
### and OTUs that occur at least 3 times (xx). This is analagous to a distance matrix.
r_otu.all <- rcorr(as.matrix(shavings.merge.df[state.f==cur.s,xx]), type='spearman')
### We only want part of this table (we don't need both directions)
### so we use the upper.tri function to take just half the table.
triangle <- upper.tri(r_otu.all$r,diag=T)
r_otu.all$r[triangle] <- NA
r_otu.all$P[triangle] <- NA
### Use the `melt()` function to turns the ordered dataframe into a new data frame that represents the value in each column as a new row so that each row represents an individual observation. This transforms our upper triangle of our  matrix and outputs each pairwise correlation as a row. We use na.rm to ignore the NAs that we put in the lower triangle.
r.otus <-reshape2::melt(r_otu.all$r, na.rm=T, value.name="r")
p.otus <-reshape2::melt(r_otu.all$P, na.rm=T, value.name="p")
## Now we make a new data frame that includes the names and r values, and p values for each OTU-OTU relationship.
## Next, we make a new column specifying if the correlation was negative (0) or positive (1)
cyto.unlisted.all <- cbind(r.otus, data.frame(p=p.otus$p))
cyto.unlisted.all$r.sign <- as.numeric(cyto.unlisted.all$r > 0)
setwd(paste("./Net.analysis/CorrNetworks.", cur.s, sep=""))
# correlation networks
cyto.unlisted.all[cyto.unlisted.all$p < 0.05 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.05.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.05 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.05.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.01 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.01.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.01 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.01.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.005 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.005.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.005 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.005.r.0.8.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.001 & abs(cyto.unlisted.all$r) > 0.6,] %>% write.table(., 'cyto.shavings.merged.p.0.001.r.0.6.txt', quote=F, sep="	", row.names=F)
cyto.unlisted.all[cyto.unlisted.all$p < 0.001 & abs(cyto.unlisted.all$r) > 0.8,] %>% write.table(., 'cyto.shavings.merged.p.0.001.r.0.8.txt', quote=F, sep="	", row.names=F)
# correlation networks
cyto.unlisted.all[cyto.unlisted.all$p < 0.05 & abs(cyto.unlisted.all$r) > 0.6,] %>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.05 & abs(cyto.unlisted.all$r) > 0.8,] %>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.01 & abs(cyto.unlisted.all$r) > 0.6,]%>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.01 & abs(cyto.unlisted.all$r) > 0.8,] %>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.005 & abs(cyto.unlisted.all$r) > 0.6,] %>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.005 & abs(cyto.unlisted.all$r) > 0.8,] %>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.001 & abs(cyto.unlisted.all$r) > 0.6,] %>% dim()
cyto.unlisted.all[cyto.unlisted.all$p < 0.001 & abs(cyto.unlisted.all$r) > 0.8,] %>% dim()
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron Manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
setwd(paste("./Net.analysis/CorrNetworks.", cur.s, sep=""))
## set up data.bd to store betweenness and degree for hub OTUs identified in the analysis.
data.bd <- data.frame(name=NULL, BetweennessCentrality=NULL, Degree=NULL, p=NULL, r=NULL)
for (i in c("0.05","0.01","0.005", "0.001")) {
for (cutoff in c("0.6","0.8")) {
# Read in appropriate network into a igraph object (network)
gr <-read.csv(paste("cyto.shavings.merged.p.", i, ".r.", cutoff,".txt", sep = ''), sep='\t') %>% as.matrix() %>% graph_from_data_frame(directed =F)
# Calculate degree and betweenness for the network and store in cyto
cyto <- data.frame(Degree = degree(gr))
cyto$BetweennessCentrality = betweenness(gr)
# Fit the Weibull distribution to degree and find OTUs that fall above the 90th percentile
degree.w<-fitdistr(cyto$Degree, 'Weibull')
cutoff.d<-qweibull(0.9, degree.w$estimate[1], degree.w$estimate[2])
out.d <- cyto$Degree > cutoff.d
# Fit the exponential distribution to betweenness and find OTUs that fall above the 90th percentile
betweenness.exp <- fitdistr(cyto$BetweennessCentrality, "exponential")
cutoff.b<-qexp(0.9, rate = betweenness.exp $estimate)
out.b <- cyto$BetweennessCentrality > cutoff.b
# Save the hub OTUs for this network
prefix <- paste("cyto.shavings.merged.p.", i, ".r.", cutoff, ".network.analysis", sep = '')
cyto[out.b & out.d,] %>% write.csv(.,paste(prefix, '.bd.csv', sep=''), quote=F,row.names=T)
## add the hub OTUs to our data.bd table to keep track of
## our results for different combinations of r and p cutoffs
cyto$name=rownames(cyto)
data.bd <- rbind(data.bd, cbind(cyto[out.d & out.b,c('name','BetweennessCentrality','Degree')], p=i, r=cutoff), make.row.names=F)
}}
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron Manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
bd.tab <- with(data.bd, data.frame(name=unique(name)))
bd.tab$p0.05.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.05' & data.bd$r=='0.6','name'])
bd.tab$p0.01.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.01' & data.bd$r=='0.6','name'])
bd.tab$p0.005.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.005' & data.bd$r=='0.6','name'])
bd.tab$p0.001.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.0001' & data.bd$r=='0.6','name'])
bd.tab$p0.05.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.05' & data.bd$r=='0.8','name'])
bd.tab$p0.01.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.01' & data.bd$r=='0.8','name'])
bd.tab$p0.005.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.005' & data.bd$r=='0.8','name'])
bd.tab$p0.001.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.0001' & data.bd$r=='0.8','name'])
bd.tab
bd.tab %>% cbind( tax_table(shavings.merge)[as.character(bd.tab$name),], .) %>% write.csv(., paste("Results/Shavings.HubOTUS.", cur.s, ".csv", sep=""), quote=F, row.names=T)
### Find matches between identified hub OTUs and random forest taxa
otunames.rf <- read.csv("Results/RF.shavings.t.table.csv", row.names=1)
otunames.rf[as.chacater(bd.tab$name),] %>% write.csv(., paste("Results/Shavings.HubOTUS.RF.consensus.", cur.s, ".csv", sep=""), quote=F, row.names=T)
setwd("/Users/will1809/OneDrive - purdue.edu/TCD microbiome spring 2017/Aaron Manuscript/Geoff_Final_RFiles/Juglans.microbiome.github")
bd.tab <- with(data.bd, data.frame(name=unique(name)))
bd.tab$p0.05.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.05' & data.bd$r=='0.6','name'])
bd.tab$p0.01.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.01' & data.bd$r=='0.6','name'])
bd.tab$p0.005.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.005' & data.bd$r=='0.6','name'])
bd.tab$p0.001.r0.6 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.0001' & data.bd$r=='0.6','name'])
bd.tab$p0.05.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.05' & data.bd$r=='0.8','name'])
bd.tab$p0.01.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.01' & data.bd$r=='0.8','name'])
bd.tab$p0.005.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.005' & data.bd$r=='0.8','name'])
bd.tab$p0.001.r0.8 <- as.integer(bd.tab$name %in% data.bd[data.bd$p=='0.0001' & data.bd$r=='0.8','name'])
bd.tab
bd.tab %>% cbind( tax_table(shavings.merge)[as.character(bd.tab$name),], .) %>% write.csv(., paste("Results/Shavings.HubOTUS.", cur.s, ".csv", sep=""), quote=F, row.names=T)
### Find matches between identified hub OTUs and random forest taxa
otunames.rf <- read.csv("Results/RF.shavings.t.table.csv", row.names=1)
otunames.rf[as.character(bd.tab$name),] %>% write.csv(., paste("Results/Shavings.HubOTUS.RF.consensus.", cur.s, ".csv", sep=""), quote=F, row.names=T)
figure.network <- function (p, r, s, subs=F) {
# the aruments to this function ar p (p cutoff), r (r cutoff), s (state)
# and whether you want to include subnetworks in the plot (subs)
# make a graph object from the network
gr <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,1:3] %>% as.matrix() %>% graph_from_data_frame(directed =F)
# create edge attributes for positive and negative sign correlations and absolute value of the correlation
edge_attr(gr, name= 'r.sign') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% sign() %>% as.factor()
edge_attr(gr, name= 'r.abs') <- read.csv(paste("Net.analysis/CorrNetworks.", s,"/cyto.shavings.merged.p.", p, ".r.", r,".txt", sep = ''), sep='\t')[,3] %>% abs() %>% as.numeric()
# create vertex attributes for degree and fungus vs bacteria
vertex_attr(gr, name='deg') <- degree(gr)
vertex_attr(gr, name='fu.ba') <- (vertex_attr(gr, 'name') %>% grepl('Botu',.) ) %>% as.numeric()
# create another vertex attribute for whether a vertex was a hub taxa in our results
bd.tab <- read.csv(paste("Results/Shavings.HubOTUS.", s, ".csv", sep=""), row.names = 1)
vertex_attr(gr, name='hub') <- vertex_attr(gr, 'name') %in% rownames(bd.tab)[bd.tab[, paste("p",p,".r",r,sep="")] == 1] %>% as.numeric()
# if in Washington, find Geosmithia morbida (Otu0115) and modify the vertex attributes so it can be
# coded along with hub and fungus/bacteria, so it can be plotted in a different color and shape
if (s == "WA") {
vertex_attr(gr, name='hub') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric) + vertex_attr(gr, name='hub'))
vertex_attr(gr, name='fu.ba') <- ((((vertex_attr(gr, 'name') == 'Otu0115' )) %>% as.numeric)*2 + vertex_attr(gr, name='fu.ba'))
}
# if sub networks are not desired, remove them and just plot the biggest one
if (!subs) {
dec.subrs <- decompose.graph(gr) # breaks up graph into subnetworks
cl.gr.i <- which.max(clusters(gr)$csize) # figures out the biggest subnetwork
gr <- dec.subrs[[cl.gr.i]] # replaces our graph object with just the big subnetwork
}
# create a layout 'kk' Kamada-Kawai
# weights= 2-as.numeric(edge_attr(gr, 'r'))
# allows the negative correlations to be plotted
# farther away from each other. 2 - r will be close
# to 1 for positive correlations, plotting them close
# together, whereas close to 3 for strong negative correlations.
layout <- layout_with_kk(gr, weights=2-as.numeric(edge_attr(gr, 'r')))
# now graph with the layout object and return the resulting
# graph object as output from this funtion
ggraph(gr, layout) +
geom_edge_link(aes(width=.1, alpha=r.abs, color=as.factor(r.sign))) +
scale_edge_color_manual(values=c('grey','blue')) +
scale_edge_width(range=c(0.2,1)) +
geom_node_point(aes(size=deg, shape=as.factor(hub), color=as.factor(fu.ba))) +
scale_size(range = c(.2,2.5)) + scale_color_manual(values=c('red','black','green')) +
scale_shape_manual(values=c(1,19,8)) +
theme_graph() +
theme(legend.position='none')
}
p<-"0.01"
r<-"0.8"
figure.network(p, r, "WA")
library(tidyverse)
library(Hmisc)
library(MASS)
library(igraph)
library(tidygraph)
library(ggraph)
library(gridExtra)
library(phyloseq)
library(tidyverse)
library(tidyverse)
